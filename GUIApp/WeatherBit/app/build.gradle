/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id "jacoco"
}

sourceCompatibility = 1.17
targetCompatibility = 1.17


javafx {
    version = "17.0.2"
    modules = ['javafx.controls', 'javafx.web', 'javafx.media']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}



dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'
    implementation 'junit:junit:4.13.1'



    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'com.google.zxing:javase:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

}

application {
    // Define the main class for the application.
    mainClass = 'milestone2.Main'
}

run {
    jvmArgs = ['--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED']
}



tasks.named('test') {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}


jacocoTestReport{
    reports{
        html.required = true
        csv.required = true
    }
}
