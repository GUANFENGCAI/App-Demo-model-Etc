/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'jacoco'


}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'
    implementation 'junit:junit:4.13.1'

    // Use JUnit Jupiter for testing.

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    //compile 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group:'org.xerial', name:'sqlite-jdbc', version:'3.8.11.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'


    implementation 'org.apache.commons:commons-lang3:3.5'

}

application {
    // Define the main class for the application.
    mainClass = 'Assignment.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

test {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

jacocoTestReport{
    reports{
        html.required = true
        csv.required = true
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


run{
    standardInput = System.in
}


